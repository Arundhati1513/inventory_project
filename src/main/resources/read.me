API Endpoints

Base URL:
bash
Copy code
http://localhost:9098/api/product
1. Create Inventory Item
URL: /
Method: POST
Request Body:
json
Copy code
{
      "description" : "mobile",
      "brand":"iphone-apple",
      "model":"13 pro",
      "quantity":13
}
Response:
201 Created: The inventory item is created successfully.
400 Bad Request: The request body is invalid.
2. Get Inventory Item by ID
URL: /{id}
Method: GET
URL Params: id – Integer, required (ID of the inventory item)
Response:
200 OK: Returns the inventory item details.
404 Not Found: If no inventory item is found with the specified id.
3. Update Inventory Item by ID
URL: /{id}
Method: PUT
URL Params: id – Integer, required (ID of the inventory item)
Request Body:
json
Copy code
{

      "description" : "mobile",
      "brand":"iphone-apple",
      "model":"13 pro",
      "quantity":13
}
Response:
200 OK: The inventory item is updated successfully.
404 Not Found: If no inventory item is found with the specified id.
4. Delete Inventory Item by ID
URL: /{id}
Method: DELETE
URL Params: id – Integer, required (ID of the inventory item)
Response:
200 OK: The inventory item is deleted successfully.
404 Not Found: If no inventory item is found with the specified id.
Setup Instructions

Prerequisites
Ensure you have the following installed on your machine:

Java 17+
Maven 3+
MySQL 8+ (or any other relational database)
Steps to Set Up the Development Environment:
Clone the Repository:
bash
Copy code
git clone https://github.com/yourusername/inventory-management-api.git
cd inventory-management-api
Configure the Database:
Open the src/main/resources/application.properties file.
Update the following properties with your MySQL credentials:
properties
Copy code
spring.datasource.url=jdbc:mysql://localhost:3306/your_database
spring.datasource.username=your_username
spring.datasource.password=your_password
spring.jpa.hibernate.ddl-auto=update
Install Dependencies:
Run the following command in the root directory of the project to download all necessary dependencies:
bash
Copy code
mvn clean install
Run the Application:
After configuring the database, run the application with:
bash
Copy code
mvn spring-boot:run
Access the API: The API will be available at http://localhost:8080/api/inventory.
